@c Example description and python script
@multitable @columnfractions .50 .50 
@b{Python Script}
@smallformat
@cartouche
@verbatim
@end verbatim
@end cartouche
@end smallformat
@tab @b{Output}
@smallformat
@cartouche
@c stdout in block below
@verbatim
@include example/distribute.stdout
@end verbatim
@end cartouche
@end smallformat
@end multitable

@c Code Transformation Example
@multitable @columnfractions .45 .50 .05
@b{Original code}
@smallformat
@cartouche
@c Original Code in verbatim block below
@verbatim
@include example/distribute.original
@end verbatim
@end cartouche
@end smallformat

@tab 
@b{Transformed code}
@smallformat
@cartouche
@c Transformed Code in verbatim block below
@verbatim
@include example/distribute.original
@end verbatim
@end cartouche
@end smallformat
@end multitable
@c Example description and python script
@multitable @columnfractions .50 .50 
@b{Python Script}
@smallformat
@cartouche
@verbatim
from chill import *

source('mm.c')
procedure('mm')
#format: rose
loop(0)

known('ambn > 0')
known('an > 0')
known('bm > 0')
distribute([0,1], 1)
print_code()
@end verbatim
@end cartouche
@end smallformat
@tab @b{Output}
@smallformat
@cartouche
@c stdout in block below
@verbatim
@include example/test_distribute.stdout
@end verbatim
@end cartouche
@end smallformat
@end multitable

@c Code Transformation Example
@multitable @columnfractions .45 .50 .05
@b{Original code}
@smallformat
@cartouche
@c Original Code in verbatim block below
@verbatim
@include example/test_distribute.original
@end verbatim
@end cartouche
@end smallformat

@tab 
@b{Transformed code}
@smallformat
@cartouche
@c Transformed Code in verbatim block below
@verbatim
@include example/test_distribute.original
@end verbatim
@end cartouche
@end smallformat
@end multitable
@c Example description and python script
@multitable @columnfractions .50 .50 
@b{Python Script}
@smallformat
@cartouche
@verbatim
from chill import *

source('mm.c')
procedure('mm')
#format: rose
loop(0)

known('ambn > 0')
known('an > 0')
known('bm > 0')
distribute([0,1], 1)
print_code()
@end verbatim
@end cartouche
@end smallformat
@tab @b{Output}
@smallformat
@cartouche
@c stdout in block below
@verbatim
@include example/test_distribute.stdout
@end verbatim
@end cartouche
@end smallformat
@end multitable

@c Code Transformation Example
@multitable @columnfractions .45 .50 .05
@b{Original code}
@smallformat
@cartouche
@c Original Code in verbatim block below
@verbatim
@include example/test_distribute.original
@end verbatim
@end cartouche
@end smallformat

@tab 
@b{Transformed code}
@smallformat
@cartouche
@c Transformed Code in verbatim block below
@verbatim
@include example/test_distribute.original
@end verbatim
@end cartouche
@end smallformat
@end multitable
@c Example description and python script
@multitable @columnfractions .50 .50 
@b{Python Script}
@smallformat
@cartouche
@verbatim
from chill import *

source('mm.c')
procedure('mm')
#format: rose
loop(0)

known('ambn > 0')
known('an > 0')
known('bm > 0')
distribute([0,1], 1)
print_code()
@end verbatim
@end cartouche
@end smallformat
@tab @b{Output}
@smallformat
@cartouche
@c stdout in block below
@verbatim
@include example/test_distribute.stdout
@end verbatim
@end cartouche
@end smallformat
@end multitable

@c Code Transformation Example
@multitable @columnfractions .45 .50 .05
@b{Original code}
@smallformat
@cartouche
@c Original Code in verbatim block below
@verbatim
@include example/test_distribute.original
@end verbatim
@end cartouche
@end smallformat

@tab 
@b{Transformed code}
@smallformat
@cartouche
@c Transformed Code in verbatim block below
@verbatim
@include example/test_distribute.original
@end verbatim
@end cartouche
@end smallformat
@end multitable
