@multitable @columnfractions .50 .50 
@b{Python Script}
@smallformat
@cartouche
@verbatim
from chill import *

source('mm.c')
procedure('mm')
#format: rose
loop(0)

known('ambn > 0')
known('an > 0')
known('bm > 0')
distribute([0,1], 1)
unroll(1, 3, 4)
print_code()
@end verbatim
@end cartouche
@end smallformat
@tab @b{Original code}
@smallformat
@cartouche
@verbatim
void mm(float **A, float **B, float **C, int ambn, int an, int bm) {
  int i, j, n;

  for(i = 0; i < an; i++) {
    for(j = 0; j < bm; j++) {
      C[i][j] = 0.0f;
      for(n = 0; n < ambn; n++) {
        C[i][j] += A[i][n] * B[n][j];
      }
    }
  }
}

@end verbatim
@end cartouche
@end smallformat
@end multitable

@multitable @columnfractions .50 .50
@b{Output on stdout}
@smallformat
@cartouche
@verbatim
for(t2 = 0; t2 <= an-1; t2++) {
  for(t4 = 0; t4 <= bm-1; t4++) {
    s0(t2,t4,0);
  }
}
for(t2 = 0; t2 <= an-1; t2++) {
  for(t4 = 0; t4 <= bm-1; t4++) {
    s2(t2,t4);
    for(t6 = 0; t6 <= -over1+ambn-1; t6 += 4) {
      s1(t2,t4,t6);
      s4(t2,t4,t6);
    }
    for(t6 = max(0,ambn-over1); t6 <= ambn-1; t6++) {
      s3(t2,t4,t6);
    }
  }
}


@end verbatim
@end cartouche
@end smallformat
@tab @b{Transformed code}
@smallformat
@cartouche
@verbatim
#define __rose_lt(x,y) ((x)<(y)?(x):(y))
#define __rose_gt(x,y) ((x)>(y)?(x):(y))

void mm(float **A,float **B,float **C,int ambn,int an,int bm)
{
  int t6;
  int t4;
  int t2;
  int chill_t9;
  int chill_t8;
  int chill_t7;
  int chill_t6;
  int chill_t5;
  int chill_t4;
  int over1;
  int chill_t3;
  int chill_t2;
  int chill_t1;
  int i;
  int j;
  int n;
  over1 = 0;
  for (t2 = 0; t2 <= an - 1; t2 += 1) 
    for (t4 = 0; t4 <= bm - 1; t4 += 1) 
      C[t2][t4] = 0.0f;
  for (t2 = 0; t2 <= an - 1; t2 += 1) 
    for (t4 = 0; t4 <= bm - 1; t4 += 1) {
      over1 = ambn % 4;
      for (t6 = 0; t6 <= -over1 + ambn - 1; t6 += 4) {
        C[t2][t4] += (A[t2][t6] * B[t6][t4]);
        C[t2][t4] += (A[t2][t6 + 1] * B[t6 + 1][t4]);
        C[t2][t4] += (A[t2][t6 + 2] * B[t6 + 2][t4]);
        C[t2][t4] += (A[t2][t6 + 3] * B[t6 + 3][t4]);
      }
      for (t6 = __rose_gt(0,ambn - over1); t6 <= ambn - 1; t6 += 1) 
        C[t2][t4] += (A[t2][t6] * B[t6][t4]);
    }
}
@end verbatim
@end cartouche
@end smallformat
@end multitable
