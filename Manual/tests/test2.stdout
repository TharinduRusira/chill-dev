original
for(t2 = 0; t2 <= an-1; t2++) {
  for(t4 = 0; t4 <= bm-1; t4++) {
    s0(t2,t4,0);
    s1(t2,t4,0);
    for(t6 = 1; t6 <= ambn-1; t6++) {
      s1(t2,t4,t6);
    }
  }
}



after distribute
for(t2 = 0; t2 <= an-1; t2++) {
  for(t4 = 0; t4 <= bm-1; t4++) {
    s0(t2,t4,0);
  }
}
for(t2 = 0; t2 <= an-1; t2++) {
  for(t4 = 0; t4 <= bm-1; t4++) {
    for(t6 = 0; t6 <= ambn-1; t6++) {
      s1(t2,t4,t6);
    }
  }
}


dependence graph:
s0->s1: C:true(0, 0, +) C:true(0, 0, 0) C:output(0, 0, +) C:output(0, 0, 0)
s1->s1: C:anti(0, 0, +) C:output(0, 0, +)
s0: { Sym=[bm,an,ambn] [t1,t2,t3,t4,t5,t6,t7] : t1 = 0 && t3 = 0 && t5 = 0 && t7 = 0 && t6 = 0 && 0 <= t2 < an && 0 <= t4 < bm && 1 <= ambn }
s1: { Sym=[ambn,bm,an] [t1,t2,t3,t4,t5,t6,t7] : t1 = 1 && t3 = 0 && t5 = 0 && t7 = 0 && 0 <= t2 < an && 0 <= t6 < ambn && 0 <= t4 < bm }

after permute
for(t2 = 0; t2 <= an-1; t2++) {
  for(t4 = 0; t4 <= bm-1; t4++) {
    if (ambn >= t2+1) {
      s0(t2,t4,0);
      s1(0,t4,t2);
    }
    else {
      s0(t2,t4,0);
    }
    if (ambn >= t2+1) {
      for(t6 = 1; t6 <= an-1; t6++) {
        s1(t6,t4,t2);
      }
    }
  }
}
for(t2 = an; t2 <= ambn-1; t2++) {
  for(t4 = 0; t4 <= bm-1; t4++) {
    for(t6 = 0; t6 <= an-1; t6++) {
      s1(t6,t4,t2);
    }
  }
}


